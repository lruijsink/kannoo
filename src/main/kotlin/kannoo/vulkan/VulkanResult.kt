package kannoo.vulkan

import org.lwjgl.vulkan.EXTImageDrmFormatModifier.VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT
import org.lwjgl.vulkan.KHRDisplaySwapchain.VK_ERROR_INCOMPATIBLE_DISPLAY_KHR
import org.lwjgl.vulkan.KHRGlobalPriority.VK_ERROR_NOT_PERMITTED_KHR
import org.lwjgl.vulkan.KHRSurface.VK_ERROR_NATIVE_WINDOW_IN_USE_KHR
import org.lwjgl.vulkan.KHRSurface.VK_ERROR_SURFACE_LOST_KHR
import org.lwjgl.vulkan.KHRSwapchain.VK_ERROR_OUT_OF_DATE_KHR
import org.lwjgl.vulkan.KHRSwapchain.VK_SUBOPTIMAL_KHR
import org.lwjgl.vulkan.VK10.VK_ERROR_DEVICE_LOST
import org.lwjgl.vulkan.VK10.VK_ERROR_EXTENSION_NOT_PRESENT
import org.lwjgl.vulkan.VK10.VK_ERROR_FEATURE_NOT_PRESENT
import org.lwjgl.vulkan.VK10.VK_ERROR_FORMAT_NOT_SUPPORTED
import org.lwjgl.vulkan.VK10.VK_ERROR_FRAGMENTED_POOL
import org.lwjgl.vulkan.VK10.VK_ERROR_INCOMPATIBLE_DRIVER
import org.lwjgl.vulkan.VK10.VK_ERROR_INITIALIZATION_FAILED
import org.lwjgl.vulkan.VK10.VK_ERROR_LAYER_NOT_PRESENT
import org.lwjgl.vulkan.VK10.VK_ERROR_MEMORY_MAP_FAILED
import org.lwjgl.vulkan.VK10.VK_ERROR_OUT_OF_DEVICE_MEMORY
import org.lwjgl.vulkan.VK10.VK_ERROR_OUT_OF_HOST_MEMORY
import org.lwjgl.vulkan.VK10.VK_ERROR_TOO_MANY_OBJECTS
import org.lwjgl.vulkan.VK10.VK_ERROR_UNKNOWN
import org.lwjgl.vulkan.VK10.VK_EVENT_RESET
import org.lwjgl.vulkan.VK10.VK_EVENT_SET
import org.lwjgl.vulkan.VK10.VK_INCOMPLETE
import org.lwjgl.vulkan.VK10.VK_NOT_READY
import org.lwjgl.vulkan.VK10.VK_SUCCESS
import org.lwjgl.vulkan.VK10.VK_TIMEOUT
import org.lwjgl.vulkan.VK11.VK_ERROR_INVALID_EXTERNAL_HANDLE
import org.lwjgl.vulkan.VK11.VK_ERROR_OUT_OF_POOL_MEMORY
import org.lwjgl.vulkan.VK12.VK_ERROR_FRAGMENTATION
import org.lwjgl.vulkan.VK12.VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS
import org.lwjgl.vulkan.VK14.VK_ERROR_NOT_PERMITTED

private val vkResultCodeNames = mapOf(
    VK_SUCCESS to "VK_SUCCESS",
    VK_NOT_READY to "VK_NOT_READY",
    VK_TIMEOUT to "VK_TIMEOUT",
    VK_EVENT_SET to "VK_EVENT_SET",
    VK_EVENT_RESET to "VK_EVENT_RESET",
    VK_INCOMPLETE to "VK_INCOMPLETE",
    VK_ERROR_OUT_OF_HOST_MEMORY to "VK_ERROR_OUT_OF_HOST_MEMORY",
    VK_ERROR_OUT_OF_DEVICE_MEMORY to "VK_ERROR_OUT_OF_DEVICE_MEMORY",
    VK_ERROR_INITIALIZATION_FAILED to "VK_ERROR_INITIALIZATION_FAILED",
    VK_ERROR_DEVICE_LOST to "VK_ERROR_DEVICE_LOST",
    VK_ERROR_MEMORY_MAP_FAILED to "VK_ERROR_MEMORY_MAP_FAILED",
    VK_ERROR_LAYER_NOT_PRESENT to "VK_ERROR_LAYER_NOT_PRESENT",
    VK_ERROR_EXTENSION_NOT_PRESENT to "VK_ERROR_EXTENSION_NOT_PRESENT",
    VK_ERROR_FEATURE_NOT_PRESENT to "VK_ERROR_FEATURE_NOT_PRESENT",
    VK_ERROR_INCOMPATIBLE_DRIVER to "VK_ERROR_INCOMPATIBLE_DRIVER",
    VK_ERROR_TOO_MANY_OBJECTS to "VK_ERROR_TOO_MANY_OBJECTS",
    VK_ERROR_FORMAT_NOT_SUPPORTED to "VK_ERROR_FORMAT_NOT_SUPPORTED",
    VK_ERROR_FRAGMENTED_POOL to "VK_ERROR_FRAGMENTED_POOL",
    VK_ERROR_UNKNOWN to "VK_ERROR_UNKNOWN",
    VK_ERROR_OUT_OF_POOL_MEMORY to "VK_ERROR_OUT_OF_POOL_MEMORY",
    VK_ERROR_INVALID_EXTERNAL_HANDLE to "VK_ERROR_INVALID_EXTERNAL_HANDLE",
    VK_ERROR_FRAGMENTATION to "VK_ERROR_FRAGMENTATION",
    VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS to "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS",
    VK_ERROR_NOT_PERMITTED to "VK_ERROR_NOT_PERMITTED",
    VK_ERROR_SURFACE_LOST_KHR to "VK_ERROR_SURFACE_LOST_KHR",
    VK_ERROR_NATIVE_WINDOW_IN_USE_KHR to "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
    VK_SUBOPTIMAL_KHR to "VK_SUBOPTIMAL_KHR",
    VK_ERROR_OUT_OF_DATE_KHR to "VK_ERROR_OUT_OF_DATE_KHR",
    VK_ERROR_INCOMPATIBLE_DISPLAY_KHR to "VK_ERROR_INCOMPATIBLE_DISPLAY_KHR",
    VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT to "VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT",
    VK_ERROR_NOT_PERMITTED_KHR to "VK_ERROR_NOT_PERMITTED_KHR",
    //VK_ERROR_VALIDATION_FAILED
    //VK_ERROR_INVALID_PIPELINE_CACHE_DATA
    //VK_ERROR_NO_PIPELINE_MATCH
)

inline fun Int.orThrow() {
    if (this < 0)
        throw RuntimeException("Vulkan error $this (${vkResultName(this)})")
}

inline fun Int.orThrow(message: String) {
    if (this < 0)
        throw RuntimeException("Vulkan error $this (${vkResultName(this)}): $message")
}

fun vkResultName(code: Int): String =
    vkResultCodeNames[code] ?: "[unknown error code $code]"
